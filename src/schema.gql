# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  _id: ID!
  userName: String!
  email: String!
  fullName: String!
  phoneNumber: String!
  role: UserRoleEnum!
  isApplyReceiveNewBookInfo: Boolean!
  rents: [Rent!]!
  bookRentalCount: Int
  bookRentalInfo: [Book!]
}

enum UserRoleEnum {
  ADMIN
  USER
}

type AuthResponseType {
  accessToken: String!
  refreshToken: String!
  user: User
}

type Media {
  _id: ID!
  mimetype: String!
}

type Category {
  _id: ID!
  name: String!
  code: String!
  mediaId: String!
  thumbnail: Media!
  books: [Book!]!
}

type Book {
  _id: ID!
  categoryId: String!
  title: String!
  code: String!
  mediaId: String!
  description: String!
  pageTotal: Int!
  quantity: Int!
  available: Int!
  createdAt: String!
  updatedAt: String!
  thumbnail: Media!
  categoryInfo: Category!
}

type Rent {
  _id: ID!
  userId: String!
  bookIds: [String!]!
  status: RentStatusEnum!
  createdAt: String!
  updatedAt: String!
  userInfo: User!
  booksInfo: [Book!]!
}

enum RentStatusEnum {
  PROCESSING
  ACCEPTED
  DENIED
  DONE
}

type Notification {
  _id: ID!
  type: String!
  entityId: String!
  createdAt: String!
  bookInfo: Book!
  rentInfo: Rent!
}

type Query {
  findAllMedia(queryArgsInput: QueryArgsInput = {limit: 0, skip: 0}): [Media!]!
  findAllCategory(queryArgsInput: QueryArgsInput = {limit: 0, skip: 0}): [Category!]!
  findAllBook(queryArgsInput: QueryArgsInput = {limit: 0, skip: 0}): [Book!]!
  findAllUser(queryArgsInput: QueryArgsInput = {limit: 0, skip: 0}): [User!]!
  findAllRent(queryArgsInput: QueryArgsInput = {limit: 0, skip: 0}): [Rent!]!
  getHello: String!
}

input QueryArgsInput {
  limit: Int
  skip: Int
}

type Mutation {
  extractBookData: Media!
  createCategory(createCategoryInput: CreateCategoryInput!): Category!
  createBook(createBookInput: CreateBookInput!): Book!
  applyReceiveNewBookInfo: User!
  ignoreReceiveNewBookInfo: User!
  createRent(createRentInput: CreateRentInput!): Rent!
  updateRentStatus(updateRentStatusInput: UpdateRentStatusInput!): Rent!
  uploadFile(uploadFileInput: UploadFileInput!): Media!
  signUp(createUserInput: CreateUserInput!): AuthResponseType!
  signIn(signInInput: SignInInput!): AuthResponseType!
}

input CreateCategoryInput {
  name: String!
  code: String!
  mediaId: String!
}

input CreateBookInput {
  categoryId: String!
  mediaId: String!
  title: String!
  description: String
  pageTotal: Int!
  quantity: Int!
  available: Int!
}

input CreateRentInput {
  bookIds: [String!]!
}

input UpdateRentStatusInput {
  rentId: String!
  updateStatus: RentStatusEnum!
}

input UploadFileInput {
  file: Upload!
  width: Int!
  height: Int!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input CreateUserInput {
  userName: String!
  email: String!
  password: String!
  fullName: String!
  phoneNumber: String!
}

input SignInInput {
  userName: String!
  password: String!
}

type Subscription {
  getExcelDataByMediaId: [String!]!
  getBookAddedNotification: Notification!
  getRentUpdatedNotification: Notification!
  getRentCreatedNotification: Notification!
}