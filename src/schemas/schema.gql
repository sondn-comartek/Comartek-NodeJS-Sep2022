# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input CreateOrderInput {
  """List Pets in order"""
  pets: [String!]!

  """Expected shipping date"""
  shipping_date: DateTime!

  """order of status"""
  status: OrderStatus!
}

input CreatePetInput {
  """pet of category"""
  category: String!

  """name of pet"""
  name: String!

  """photo url of pet"""
  photo_urls: String!

  """price of pet"""
  price: Float!

  """status of pet"""
  status: PetStatus!

  """pet have tags"""
  tags: [String!]!
}

input CreateUserInput {
  """email of  user"""
  email: String!

  """first name of user"""
  first_name: String!

  """last name of user"""
  last_name: String!

  """password of user"""
  password: String!

  """phone number of user"""
  phone: String!

  """status of user in system"""
  status: UserStatus = inactive

  """username of user"""
  username: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input LoginUserInput {
  """email of user"""
  email: String!

  """password of user"""
  password: String!
}

type Mutation {
  approve(updateOrderInput: UpdateOrderInput!): Order!
  createOrder(createOrderInput: CreateOrderInput!): Order!
  createPet(createPetInput: CreatePetInput!): Pet!
  createUser(createUserInput: CreateUserInput!): User!
  removeOrder(id: Int!): Order!
  removePet(id: Int!): Pet!
  removeUser(id: Int!): User!
  updatePet(updatePetInput: UpdatePetInput!): Pet!
  updateUser(updateUserInput: UpdateUserInput!): User!
}

type Order {
  """List Pets in order"""
  pets: [Pet!]!

  """price of order"""
  price: Float!

  """Expected shipping date"""
  shipping_date: DateTime!

  """order of status"""
  status: OrderStatus!
}

enum OrderStatus {
  approved
  delivered
  placed
}

type Pet {
  """pet of category"""
  category: String!

  """name of pet"""
  name: String!

  """pet of category"""
  petID: String!

  """photo url of pet"""
  photo_urls: String!

  """price of pet"""
  price: Float!

  """status of pet"""
  status: PetStatus!

  """pet have tags"""
  tags: [String!]!
}

enum PetStatus {
  available
  unavailable
}

type Query {
  login(logger: LoginUserInput!): String!
  order(id: Int!): Order!
  pet(petID: String!, status: PetStatus!, tags: [String!]!): [Pet!]!
  pets: [Pet!]!
  pets_status(status: PetStatus!): Float!
  user(id: String!): User!
  users: String!
}

input UpdateOrderInput {
  """orderID of order"""
  orderID: String!

  """List Pets in order"""
  pets: [String!]

  """Expected shipping date"""
  shipping_date: DateTime

  """status of order"""
  status: OrderStatus!
}

input UpdatePetInput {
  """pet of category"""
  category: String
  id: Int!

  """name of pet"""
  name: String

  """photo url of pet"""
  photo_urls: String

  """price of pet"""
  price: Float

  """status of pet"""
  status: PetStatus

  """pet have tags"""
  tags: [String!]
}

input UpdateUserInput {
  """email of  user"""
  email: String

  """first name of user"""
  first_name: String
  id: Int!

  """last name of user"""
  last_name: String

  """password of user"""
  password: String

  """phone number of user"""
  phone: String

  """status of user in system"""
  status: UserStatus = inactive

  """username of user"""
  username: String
}

type User {
  """email of  user"""
  email: String!

  """first name of user"""
  first_name: String!

  """last name of user"""
  last_name: String!

  """password of user"""
  password: String!

  """phone number of user"""
  phone: String!

  """status of user in system"""
  status: UserStatus!

  """username of user"""
  username: String!
}

enum UserStatus {
  active
  inactive
}