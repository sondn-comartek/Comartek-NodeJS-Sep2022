{
	"info": {
		"_postman_id": "a24e7f34-b8be-4791-a5a3-ec6cc1adcfc2",
		"name": "comartek-lec10",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "16033304"
	},
	"item": [
		{
			"name": "register",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const errCode = pm.response.json().errCode;\r",
							"const message = pm.response.json()?.message;\r",
							"\r",
							"pm.test(\"Error code response equal 0\", function () {\r",
							"    pm.expect(errCode).to.eql(0);\r",
							"});\r",
							"\r",
							"pm.test(\"Create new user successfully\", function () {\r",
							"    pm.expect(message).to.include(\"Create new user successfully\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const randomEmail = pm.variables.replaceIn('{{$randomEmail}}');\r",
							"const randomPassword = pm.variables.replaceIn('{{$randomPassword}}');\r",
							"const randomUserName = pm.variables.replaceIn('{{$randomUserName}}');\r",
							"\r",
							"pm.environment.set(\"randomEmail\", randomEmail);\r",
							"pm.environment.set(\"randomPassword\", randomPassword);\r",
							"pm.environment.set(\"randomUserName\", randomUserName);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"{{randomEmail}}\",\r\n    \"password\": \"{{randomPassword}}\",\r\n    \"username\": \"{{randomUserName}}\",\r\n    \"passwordConfirm\": \"{{randomPassword}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/register",
					"host": [
						"{{url}}"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const errCode = pm.response.json().errCode;\r",
							"const message = pm.response.json()?.message;\r",
							"const token = pm.response.json().token;\r",
							"\r",
							"pm.test(\"Token received successfully\", function () {\r",
							"    pm.expect(token).to.be.a('string');\r",
							"})\r",
							"\r",
							"pm.environment.set(\"token\", token);\r",
							"\r",
							"pm.test(\"Error code response equal 0\", function () {\r",
							"    pm.expect(errCode).to.eql(0);\r",
							"});\r",
							"\r",
							"pm.test(\"Login successfully\", function () {\r",
							"    pm.expect(message).to.include(\"Login successfully\");\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"email7@gmail.com\",\r\n    \"password\": \"7\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/login",
					"host": [
						"{{url}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "forgot-password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const errCode = pm.response.json().errCode;\r",
							"const message = pm.response.json()?.message;\r",
							"const tokenResetPassword = pm.response.json().token;\r",
							"\r",
							"pm.test(\"Token received  successfully\", function () {\r",
							"    pm.expect(tokenResetPassword).to.be.a('string');\r",
							"})\r",
							"\r",
							"pm.environment.set(\"tokenResetPassword\", tokenResetPassword);\r",
							"\r",
							"pm.test(\"Error code response equal 0\", function () {\r",
							"    pm.expect(errCode).to.eql(0);\r",
							"});\r",
							"\r",
							"pm.test(\"Send email successfully\", function () {\r",
							"    pm.expect(message).to.include(\"Send email successfully\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"email1@gmail.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/forgot-password",
					"host": [
						"{{url}}"
					],
					"path": [
						"forgot-password"
					]
				}
			},
			"response": []
		},
		{
			"name": "reset-password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const errCode = pm.response.json().errCode;\r",
							"const message = pm.response.json()?.message;\r",
							"\r",
							"pm.test(\"Error code response equal 0\", function () {\r",
							"    pm.expect(errCode).to.eql(0);\r",
							"});\r",
							"\r",
							"pm.test(\"Reset password for user successfully\", function () {\r",
							"    pm.expect(message).to.include(\"Reset password for user successfully\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"token\": \"{{tokenResetPassword}}\",\r\n    \"newPassword\": \"{{randomPassword}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/reset-password",
					"host": [
						"{{url}}"
					],
					"path": [
						"reset-password"
					]
				}
			},
			"response": []
		}
	]
}