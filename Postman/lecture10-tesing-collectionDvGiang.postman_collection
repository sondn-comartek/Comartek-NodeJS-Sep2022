{
	"info": {
		"_postman_id": "dbed5826-ac0e-43ec-85e4-ee62ca2e6323",
		"name": "lecture10-tesing-collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "14757649"
	},
	"item": [
		{
			"name": "Register",
			"item": [
				{
					"name": "Register-Success",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const email = \"duonggiang\" + Math.random() * 100000 + \"@gmail.com\"\r",
									"pm.collectionVariables.set(\"email\", `${email}`);\r",
									"pm.collectionVariables.set(\"password\", \"G1234567\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Register Success Case', () => {\r",
									"    pm.response.to.have.status(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/register",
							"host": [
								"{{server}}"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register-Email-NotValid",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const email = \"duonggiang\" + Math.random() * 100000 + \"@@@@@gmail.com\"\r",
									"pm.collectionVariables.set(\"email\", `${email}`);\r",
									"pm.collectionVariables.set(\"password\", \"G1234567\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Register Fail Case - Email Not Valid: status', () => {\r",
									"    pm.response.to.have.status(400)\r",
									"})\r",
									"pm.test('Register Fail Case - Email Not Valid: message', () => {\r",
									"    pm.response.to.have.body.message = \"Invalid email\"\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/register",
							"host": [
								"{{server}}"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register-PassWord-NotValid",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const email = \"duonggiang\" + Math.random() * 100000 + \"@@@@@gmail.com\"\r",
									"pm.collectionVariables.set(\"email\", `${email}`);\r",
									"pm.collectionVariables.set(\"password\", \"111234567\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Register Fail Case - Password not valid: status', () => {\r",
									"    pm.response.to.have.status(400)\r",
									"})\r",
									"pm.test('Register Fail Case - Password not valid: message', () => {\r",
									"    pm.response.to.have.body.message = \"Invalid password\"\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/register",
							"host": [
								"{{server}}"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register-Email-Existed",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const email = \"duonggiang1522001@gmail.com\"\r",
									"pm.collectionVariables.set(\"email\", `${email}`);\r",
									"pm.collectionVariables.set(\"password\", \"G1234567\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Register Fail Case - Email existed: status', () => {\r",
									"    pm.response.to.have.status(400)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/register",
							"host": [
								"{{server}}"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Login",
			"item": [
				{
					"name": "Login-Success",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const email = \"duongvangianghhbg152@gmail.com\"\r",
									"pm.collectionVariables.set(\"email\", `${email}`);\r",
									"pm.collectionVariables.set(\"password\", \"Ggiang151\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Login success case: status', () => {\r",
									"    pm.response.to.have.status(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/login",
							"host": [
								"{{server}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login-Fail: Wrong Email",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const email = \"duongvangianghhbg152111@gmail.com\"\r",
									"pm.collectionVariables.set(\"email\", `${email}`);\r",
									"pm.collectionVariables.set(\"password\", \"Ggiang151\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Login-fail:  wrong email', () => {\r",
									"    pm.response.to.have.status(401)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/login",
							"host": [
								"{{server}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login-fail: Wrong Password",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const email = \"duongvangianghhbg152@gmail.com\"\r",
									"pm.collectionVariables.set(\"email\", `${email}`);\r",
									"pm.collectionVariables.set(\"password\", \"Ggiang1511\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Login-fail:  wrong password', () => {\r",
									"    pm.response.to.have.status(401)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/login",
							"host": [
								"{{server}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login-fail: Invalid Email",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const email = \"duongvangianghhbg152@@gmail.com\"\r",
									"pm.collectionVariables.set(\"email\", `${email}`);\r",
									"pm.collectionVariables.set(\"password\", \"Ggiang1511\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Login-fail:  Invailid Email', () => {\r",
									"    pm.response.to.have.status(401)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/login",
							"host": [
								"{{server}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login-fail: Invalid Password",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const email = \"duongvangianghhbg152@gmail.com\"\r",
									"pm.collectionVariables.set(\"email\", `${email}`);\r",
									"pm.collectionVariables.set(\"password\", \"Ggiangdsfsdf\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Login-fail:  Invailid Password', () => {\r",
									"    pm.response.to.have.status(401)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/login",
							"host": [
								"{{server}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ResetPasswordRequest",
			"item": [
				{
					"name": "ResetPassword: Success",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const email = \"duongvangianghhbg152@gmail.com\"\r",
									"pm.collectionVariables.set(\"email\", `${email}`);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Reset password success case: status', () => {\r",
									"    pm.response.to.have.status(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{server}}/password/reset?email={{email}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"password",
								"reset"
							],
							"query": [
								{
									"key": "email",
									"value": "{{email}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ResetPassword: User not exist",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const email = \"duongvangianghhbg1522123113213fsfsdf@gmail.com\"\r",
									"pm.collectionVariables.set(\"email\", `${email}`);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Reset password success case: status', () => {\r",
									"    pm.response.to.have.status(400)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{server}}/password/reset?{{email}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"password",
								"reset"
							],
							"query": [
								{
									"key": "{{email}}",
									"value": null
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "server",
			"value": "localhost:3000"
		},
		{
			"key": "email",
			"value": ""
		},
		{
			"key": "password",
			"value": ""
		}
	]
}